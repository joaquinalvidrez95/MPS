<?xml version="1.0" encoding="utf-8" ?>
<pages:PopupPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:pages="clr-namespace:Rg.Plugins.Popup.Pages;assembly=Rg.Plugins.Popup"             
             xmlns:behaviour="clr-namespace:MPS.Behaviour;assembly=MPS"     
             xmlns:converters="clr-namespace:MPS.Converters;assembly=MPS"
             xmlns:viewModel="clr-namespace:MPS.ViewModel;assembly=MPS"
             x:Class="MPS.View.PasswordPopup"
               Style="{StaticResource StylePaddingPopup}"
             >

    <pages:PopupPage.BindingContext>
        <viewModel:PasswordPopupModel/>
    </pages:PopupPage.BindingContext>

    <pages:PopupPage.Content>
        <StackLayout Style="{StaticResource StyleStackLayoutPopup}" >

            <Label Style="{StaticResource StyleLabelDialogTitle}" Text="Ingrese el Pin"/>

            <Entry  Placeholder="Pin"
                    HorizontalOptions="FillAndExpand"                                        
                    Text="{Binding Password}"
                    x:Name="EntryPassword"
                    Keyboard="Numeric"                
                    >
                <Entry.Behaviors>
                    <behaviour:EntryPasswordValidator MaxLength="{StaticResource PasswordLength}"/>
                </Entry.Behaviors>
                <Entry.Triggers>
                    <DataTrigger TargetType="Entry"
                                 Binding="{Binding Source={x:Reference ActivityIndicator}, Path=IsRunning}"
                                 Value="True">
                        <Setter Property="IsEnabled" Value="False"/>
                    </DataTrigger>
                </Entry.Triggers>
            </Entry>
         
            <Label                                
                TextColor="{StaticResource ColorAccent}">
                <Label.IsVisible>
                    <Binding Path="LoginState">
                        <Binding.Converter>
                            <converters:LoginStateToErrorVisibleConverter/>
                        </Binding.Converter>
                    </Binding>
                </Label.IsVisible>
                <Label.Text>
                    <Binding Path="LoginState" ConverterParameter="{Binding }">
                        <Binding.Converter>
                            <converters:LoginStateToErrorTextConverter PasswordInvalidText="{StaticResource TextPasswordIncorrect}"
                                                                      TimeoutExpiredText="{StaticResource TextTimeExpired}"/>
                        </Binding.Converter>
                    </Binding>
                </Label.Text>
            </Label>

            <ActivityIndicator Color="{StaticResource ColorAccent}" x:Name="ActivityIndicator" >
                <ActivityIndicator.IsRunning>
                    <Binding Path="LoginState">
                        <Binding.Converter>
                            <converters:LoginStateToActivityIndicatorVisibleConverter/>
                        </Binding.Converter>
                    </Binding>
                </ActivityIndicator.IsRunning>
            </ActivityIndicator>

            <StackLayout Style="{StaticResource StyleStackLayoutDialogButtonContainer}" >

                <Button 
                    Style="{StaticResource StyleButtonFlat}"
                    Text="{StaticResource ButtonTextCancel}"         
                    Command="{Binding CancelCommand}"/>

                <Button 
                    IsEnabled="False"
                    Style="{StaticResource StyleButtonFlat}"
                    Text="{StaticResource ButtonTextAccept}"                                                                           
                    Command="{Binding DoneCommand}">
                    <Button.Triggers>
                        <DataTrigger TargetType="Button"
                                     Binding="{Binding Source={x:Reference EntryPassword}, Path=Text.Length}"
                                     Value="{StaticResource PasswordLength}">
                            <Setter Property="IsEnabled" Value="True"/>
                        </DataTrigger>
                        <DataTrigger TargetType="Button"
                                     Binding="{Binding Source={x:Reference ActivityIndicator}, Path=IsRunning}"
                                     Value="True">
                            <Setter Property="IsEnabled" Value="False"/>
                        </DataTrigger>
                    </Button.Triggers>
                </Button>

            </StackLayout>
        </StackLayout>
    </pages:PopupPage.Content>
</pages:PopupPage>